# Auto detect text files and perform LF normalization
* text=auto
import random

# Initialize the board
board = [" " for _ in range(9)]

# Function to display the board
def print_board():
    print(f"{board[0]} | {board[1]} | {board[2]}")
    print("--+---+--")
    print(f"{board[3]} | {board[4]} | {board[5]}")
    print("--+---+--")
    print(f"{board[6]} | {board[7]} | {board[8]}")
    print()

# Function to check for winner
def check_winner(player):
    win_conditions = [
        [0, 1, 2], [3, 4, 5], [6, 7, 8],  # Rows
        [0, 3, 6], [1, 4, 7], [2, 5, 8],  # Columns
        [0, 4, 8], [2, 4, 6]              # Diagonals
    ]
    for combo in win_conditions:
        if board[combo[0]] == board[combo[1]] == board[combo[2]] == player:
            return True
    return False

# Reset the board
def reset_board():
    global board
    board = [" " for _ in range(9)]

# Smart computer move
def computer_move():
    # 1. Check if computer can win
    for i in range(9):
        if board[i] == " ":
            board[i] = "O"
            if check_winner("O"):
                return i
            board[i] = " "

    # 2. Check if player can win (block them)
    for i in range(9):
        if board[i] == " ":
            board[i] = "X"
            if check_winner("X"):
                board[i] = "O"
                return i
            board[i] = " "

    # 3. Otherwise, pick random move
    available = [i for i in range(9) if board[i] == " "]
    return random.choice(available)

# Human vs Human mode
def play_with_friend():
    reset_board()
    current_player = "X"
    moves = 0

    while True:
        print_board()
        try:
            move = int(input(f"Player {current_player}, choose a position (1-9): ")) - 1
            if move < 0 or move > 8 or board[move] != " ":
                print("Invalid move. Try again.")
                continue
        except ValueError:
            print("Please enter a number between 1 and 9.")
            continue

        board[move] = current_player
        moves += 1

        if check_winner(current_player):
            print_board()
            print(f"ðŸŽ‰ Player {current_player} wins!")
            break
        if moves == 9:
            print_board()
            print("It's a draw!")
            break

        current_player = "O" if current_player == "X" else "X"

# Human vs Computer mode
def play_vs_computer():
    reset_board()
    moves = 0

    while True:
        print_board()

        # Human move
        try:
            move = int(input("Player X, choose a position (1-9): ")) - 1
            if move < 0 or move > 8 or board[move] != " ":
                print("Invalid move. Try again.")
                continue
        except ValueError:
            print("Please enter a number between 1 and 9.")
            continue

        board[move] = "X"
        moves += 1

        if check_winner("X"):
            print_board()
            print("ðŸŽ‰ You win!")
            break
        if moves == 9:
            print_board()
            print("It's a draw!")
            break

        # Computer move (smart)
        comp_move = computer_move()
        board[comp_move] = "O"
        print(f"ðŸ’» Computer chooses position {comp_move + 1}")
        moves += 1

        if check_winner("O"):
            print_board()
            print("ðŸ’» Computer wins!")
            break
        if moves == 9:
            print_board()
            print("It's a draw!")
            break

# Main menu
if __name__ == "__main__":
    mode = input("Choose mode: 'friend' or 'computer': ").strip().lower()
    if mode == "friend":
        play_with_friend()
    else:
        play_vs_computer()